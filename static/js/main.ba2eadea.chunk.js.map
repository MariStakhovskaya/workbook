{"version":3,"sources":["components/Practice/Practice.module.css","components/Header/Header.module.css","components/Resources/Resourse.tsx","components/Navbar/Navbar.tsx","components/Header/Header.tsx","components/Cards/Cards.tsx","assets/img/practice1.jpg","components/Practice/Practice.tsx","components/Theory/Theory.tsx","components/Test/Test.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Navbar/Navbar.module.css","components/Cards/Cards.module.css","components/Test/Test.module.css"],"names":["module","exports","Resource","Navbar","className","s","nav","item","to","activeClassName","active","Header","props","header","cardsQuestions","id","question","answer","level","Cards","useState","currentQuestion","setCurrentQuestion","currentAnswer","setCurrentAnswer","showAnswer","setShowAnswer","filter","setFilter","taskQuestion","changeFilter","value","t","wrap","description","levelBlock","onClick","cardsBlock","questionCount","length","questionText","buttonSection","navigationButton","nextQuestion","Practice","practiceBlock","practiceItem","imgItem","src","pract","Theory","Test","testQuestions","answerOptions","isCorrect","score","setScore","showScore","setShowScore","testBlock","refresh","questionSection","answerSection","map","handleAnswerOptionClick","App","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ba2eadea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Practice_wrap__1UBgv\",\"practiceBlock\":\"Practice_practiceBlock__3OtYR\",\"practiceItem\":\"Practice_practiceItem__atFmY\",\"imgItem\":\"Practice_imgItem__2YRGT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__zEo4Z\"};","import React from 'react';\r\n\r\n\r\nconst Resource = () => {\r\n    return ( <div>\r\n            Здесь будет Resource\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Resource;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/theory\" activeClassName={s.active}>Теория</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/practice\" activeClassName={s.active}>Практика</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/cards\" activeClassName={s.active}>Самоподготовка</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/test\" activeClassName={s.active}>Пройти тест</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/resource\" activeClassName={s.active}>Ресурсы</NavLink>\r\n            </div>\r\n\r\n\r\n\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\ntype HeaderPropsType = {\r\n\r\n\r\n}\r\n\r\nconst Header = (props:HeaderPropsType) => {\r\n    return (<header className={s.header}>\r\n            <div>Training</div>\r\n\r\n        </header>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {useState} from 'react';\r\nimport s from './Cards.module.css'\r\n\r\ntype CardsQuestions ={\r\n    id:number;\r\n    question: string,\r\n    answer: string,\r\n    level: string\r\n}\r\n\r\ntype FilterValueType = \"easy\" | \"hard\" | \"all\"\r\n\r\n\r\nconst cardsQuestions:CardsQuestions[]  = [\r\n    { id:1,\r\n        question: \"Что такое TDD?\",\r\n    answer:\"test-driven development - техника разработки ПО, при котором сначала пишем тесты, а потом их удовлетворяем. Затем можем спокойно рефакторить и изменять код как угодно, т.к. у нас есть тесты, которые точно скажут, что мы где-то ошиблись \",\r\n        level: \"easy\"}\r\n    ,\r\n    { id:2,\r\n        question: \"Что такое Redux? Для чего он нужен?\",\r\n        answer:\"Redux – это библиотека для работы с состоянием приложения. (некоторое хранилище данных)\",\r\n        level: \"easy\"},\r\n    { id:3,\r\n        question: \"Что такое чистая ф-ия?\",\r\n        answer:\"Чистая ф-ия, это ф-ия, которая должна быть имьютабельная и идемпотентная\",\r\n        level: \"easy\"},\r\n    { id:4,\r\n        question: \"Что такое Reducer?\",\r\n        answer:\"Reducer - это функция, которая получает на входе стейт, и экшн (объект), который имеет как минимум свойство type,(инструкция), как нужно преобразовать стейт , возвращает измененный стейт\",\r\n        level: \"easy\"},\r\n    { id:5,\r\n        question: \"Что такое компонент?\",\r\n        answer:\"Компонент(-а) - функция, возвращающая JSX-разметку. Название функции должно быть с Большой буквы.Функция может принимать props (пропсы) - объект, который компонента может использовать внутри себя для отрисовки конкретных переданных в неё данных\",\r\n        level: \"easy\"},\r\n    { id:6,\r\n        question: \"Что возвращается из useState?\",\r\n        answer:\"Вызов useState вернёт пару значений: текущее состояние и функцию, обновляющую состояние.\"\r\n    ,level: \"easy\"},\r\n    { id:7,\r\n        question: \"Что такое WebWorker?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:8,\r\n        question: \"Что такое IndexedDB?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:9,\r\n        question: \"Отличие == от ===?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:10,\r\n        question: \"Расшифруй все буквы аббревиатуры SOLID?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:11,\r\n        question: \"Что такое SEO и почему SPA для SEO не очень?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:12,\r\n        question: \"Что такое cleanup для useEffect?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:13,\r\n        question: \"Что такое SPA и в чём суть?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:14,\r\n        question: \"Что такое HOC?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:15,\r\n        question: \"Что такое NodeJS?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:16,\r\n        question: \"Расшифруй аббревиатуру CRUD\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:17,\r\n        question: \"Назовите любое отличие HTTP1 от HTTP2\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:18,\r\n        question: \"Чем отличается localStorage от sessionStorage?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:19,\r\n        question: \"Чем оличается Agile от Waterfall?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:20,\r\n        question: \"Приведите минимум 2 примера Generic в TypeScript в React?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:21,\r\n        question: \"Что возвращает функция combineReducers? \",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:22,\r\n        question: \"Перечислить методы жизненного цикла классового компонента в правильном порядке\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:23,\r\n        question: \"Назовите любые 3 метода функции?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:23,\r\n        question: \"Кто такой Babel и что он делает?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:24,\r\n        question: \"Расшифруйте аббревиатуру БЭМ?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:25,\r\n        question: \"Что такое document.querySelector?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:26,\r\n        question: \"Во что Babel превращает JSX?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:27,\r\n        question: \"Отличие микротаски от макротаски?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n\r\n]\r\n\r\nconst Cards = () => {\r\n\r\n    const [currentQuestion, setCurrentQuestion] = useState(0)\r\n    const [currentAnswer, setCurrentAnswer] = useState(0)\r\n    const [showAnswer, setShowAnswer] = useState(false)\r\n    const [filter, setFilter] = useState<FilterValueType>(\"all\")\r\n\r\n    const nextQuestionClick =() => {\r\n        const nextQuestion = currentQuestion +1\r\n        if (nextQuestion < cardsQuestions.length){\r\n            setCurrentQuestion(nextQuestion)\r\n            setShowAnswer(false)\r\n        }\r\n    }\r\n\r\n    const backQuestionClick =() => {\r\n            if (currentQuestion !==0) {\r\n            setCurrentQuestion(currentQuestion-1)\r\n                setShowAnswer(false)\r\n            }\r\n    }\r\n\r\n    const showAnswerClick =() => {\r\n        setShowAnswer(true)\r\n        setCurrentAnswer(currentAnswer+1)\r\n    }\r\n    let taskQuestion = cardsQuestions\r\n    if (filter === \"easy\") {\r\n        taskQuestion= cardsQuestions.filter(t => t.level ===\"easy\")}\r\n        if (filter === \"hard\") {\r\n            taskQuestion = cardsQuestions.filter(t => t.level ===\"hard\")}\r\n\r\n        function changeFilter(value:FilterValueType){\r\n            setFilter(value)\r\n            setCurrentQuestion(0)\r\n            setShowAnswer(false)\r\n        }\r\n\r\n\r\n\r\n    return (<div className={s.wrap}>\r\n            <div className={s.description}>В данном разделе вы можете поучить теорию. Получаете вопрос, пытаетесь ответить самостоятельно, если не можете, смотрите ответ\r\n            Вопросы разбиты на уровни easy, hard условно.</div>\r\n            <div className={s.levelBlock}>\r\n                <button onClick={() => {changeFilter(\"easy\")}}>Easy</button>\r\n                <button onClick={() => {changeFilter(\"hard\")}}>Hard</button>\r\n                <button onClick={() => {changeFilter(\"all\")}}>All</button>\r\n            </div>\r\n            <div className={s.cardsBlock}>\r\n\r\n        <div className={s.questionCount}>\r\n            <span>Вопрос {currentQuestion+1} / {taskQuestion.length}</span>\r\n        </div>\r\n    <div className={s.questionText}>{taskQuestion[currentQuestion].question}</div>\r\n\r\n        {showAnswer?\r\n        <div className={s.showAnswer}>{taskQuestion[currentQuestion].answer}</div>: ''}\r\n                <div className={s.buttonSection}>\r\n    <button onClick={showAnswerClick}>Показать ответ</button>\r\n        <div className={s.navigationButton}>\r\n\r\n        <button onClick={backQuestionClick}>Назад</button>\r\n            <button onClick={nextQuestionClick}>Далее</button>\r\n        </div>\r\n    </div>\r\n            </div>\r\n</div>\r\n\r\n    )\r\n}\r\n\r\nexport default Cards;","export default __webpack_public_path__ + \"static/media/practice1.8e573f4a.jpg\";","import React from 'react';\r\nimport s from './Practice.module.css'\r\nimport pract from '../../assets/img/practice1.jpg'\r\n\r\n\r\nconst Practice = () => {\r\n    return ( <div className={s.wrap}>\r\n            <div className={s.description}>Здесь будут примеры для применения знаний на практике</div>\r\n            <div className={s.practiceBlock}>\r\n                <button>JS</button>\r\n                <button>React,Redux</button>\r\n                <button>HTML+CSS</button>\r\n                <button>with API</button>\r\n\r\n                <div className={s.practiceItem}>\r\n                    <div className={s.imgItem}><img src={pract} /></div>\r\n                    <div>Счетчик</div>\r\n                    <div>Описание</div>\r\n                    <div>Стек</div>\r\n                </div>\r\n            </div>\r\n\r\n            1. Разделяем на технологии\r\n            2. JS - countdown\r\n            3. JS - Countdown Timer\r\n            0:32:15 - Quiz App\r\n            1:23:20 - Recipe App\r\n            3:19:57 - Notes App\r\n            4:10:35 - ToDo App\r\n            4:46:14 - Movies App\r\n            5:39:55 - GitHub Profiles\r\n            6:33:30 - Drawing App\r\n            7:19:40 - Password Generator\r\n            8:10:05 - Weather App\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Practice;","import React from 'react';\r\n\r\n\r\nconst Theory = () => {\r\n    return ( <div>\r\n            Здесь будет Resource\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Theory;","import React, {useState} from 'react';\r\nimport s from './Test.module.css'\r\ntype AnswerOptionsType = {\r\n    answer:string,\r\n    isCorrect: boolean\r\n}\r\ntype TestQuestionsType ={\r\n    question: string,\r\n    answerOptions: AnswerOptionsType[]\r\n}\r\n\r\nconst Test = () => {\r\n    const testQuestions:TestQuestionsType[]  = [\r\n        {question: \"Что такое TDD?\",\r\n            answerOptions: [\r\n                {answer: 'fff', isCorrect: false},\r\n                {answer: 'aaa', isCorrect: true},\r\n                {answer: 'fbb', isCorrect: false},\r\n                {answer: 'ccc', isCorrect: false},\r\n            ]\r\n           },\r\n        {question: \"Что такое djfnkjcnds?\",\r\n            answerOptions: [\r\n                {answer: '111', isCorrect: false},\r\n                {answer: '555', isCorrect: true},\r\n                {answer: '44', isCorrect: false},\r\n                {answer: 'ccc', isCorrect: false},\r\n            ]\r\n        },\r\n        {question: \"Что такое 1212312?\",\r\n            answerOptions: [\r\n                {answer: 'fff', isCorrect: false},\r\n                {answer: 'aaa', isCorrect: true},\r\n                {answer: 'fbb', isCorrect: false},\r\n                {answer: 'ccc', isCorrect: false},\r\n            ]\r\n        }\r\n    ]\r\n\r\n\r\n    const [currentQuestion, setCurrentQuestion] = useState(0)\r\n    const [score, setScore] = useState(0)\r\n    const [showScore, setShowScore] = useState(false)\r\n\r\n\r\n    const handleAnswerOptionClick=(isCorrect: boolean) => {\r\n    if(isCorrect){\r\n        setScore(score + 1)\r\n    }\r\n\r\n    const nextQuestion = currentQuestion + 1\r\n        if (nextQuestion < testQuestions.length){\r\n            setCurrentQuestion(nextQuestion)\r\n        } else {\r\n            setShowScore(true)\r\n        }\r\n    }\r\n\r\n    const refresh =() =>{\r\n        setCurrentQuestion(0)\r\n        setScore(0)\r\n        setShowScore(false)\r\n    }\r\n\r\n    return (<div className={s.wrap}>\r\n\r\n            <div className={s.testBlock}>\r\n\r\n                {\r\n                    showScore ?\r\n                        <div className={s.showScore}>\r\n                            <div>Правильных ответов {score} из {testQuestions.length}</div>\r\n                        <button onClick={refresh} className={s.refresh}>Пройти еще раз</button>\r\n                        </div>\r\n                        :\r\n                        <div className={s.questionSection}>\r\n                            <div className={s.questionCount}>\r\n                                <span>Вопрос {currentQuestion+1}</span> / {testQuestions.length}\r\n                            </div>\r\n                            <div className={s.questionText}>{testQuestions[currentQuestion].question}</div>\r\n                            <div className={s.answerSection}>\r\n                                {testQuestions[currentQuestion].answerOptions.map(item => (\r\n                                    <button onClick={()=>handleAnswerOptionClick(item.isCorrect)}>{item.answer}</button>\r\n                                ))}\r\n\r\n                            </div>\r\n                        </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test;","import React from 'react';\nimport './App.css';\nimport {Route} from 'react-router-dom'\nimport Resource from \"./components/Resources/Resourse\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Header from \"./components/Header/Header\";\nimport Cards from \"./components/Cards/Cards\";\nimport Practice from \"./components/Practice/Practice\";\nimport Theory from \"./components/Theory/Theory\";\nimport Test from \"./components/Test/Test\";\n\ntype AppPropsType = {}\n\nconst App = (props: AppPropsType) => {\n\n    return (\n        <div className=\"app-wrapper\">\n            <Header />\n            <Navbar/>\n            <div className=\"app-wrapper-content\">\n                <Route path=\"/theory\"\n                       render={() => <Theory />}/>\n                <Route path=\"/practice\"\n                       render={() => <Practice />}/>\n                <Route path=\"/cards\"\n                       render={() => <Cards />}/>\n                <Route path=\"/resource\"\n                       render={() => <Resource/>}/>\n                <Route path=\"/test\"\n                       render={() => <Test />}/>\n\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n            <App />\n    </BrowserRouter>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2rEHX\",\"item\":\"Navbar_item__EszB0\",\"active\":\"Navbar_active__1rnww\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Cards_wrap__31MWK\",\"description\":\"Cards_description__3jlTb\",\"cardsBlock\":\"Cards_cardsBlock__34Gou\",\"questionText\":\"Cards_questionText__1ODBE\",\"questionCount\":\"Cards_questionCount__1Nzc0\",\"buttonSection\":\"Cards_buttonSection__3Ecmr\",\"navigationButton\":\"Cards_navigationButton__4I_we\",\"showAnswer\":\"Cards_showAnswer__SfGVx\",\"levelBlock\":\"Cards_levelBlock__3BsG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Test_wrap__2BpYf\",\"testBlock\":\"Test_testBlock__3QFFx\",\"questionCount\":\"Test_questionCount__2doqc\",\"questionText\":\"Test_questionText__G8B6b\",\"answerSection\":\"Test_answerSection__2WqV0\",\"showScore\":\"Test_showScore__2o57N\",\"refresh\":\"Test_refresh__1s7ah\"};"],"sourceRoot":""}