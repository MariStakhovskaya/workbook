{"version":3,"sources":["components/Practice/Practice.module.css","components/Header/Header.module.css","components/Cards/Cards.module.css","components/Resources/Resourse.tsx","components/Navbar/Navbar.tsx","components/Header/Header.tsx","components/Cards/card/Card.tsx","components/Cards/Cards.tsx","assets/img/practice1.jpg","components/Practice/Practice.tsx","components/Theory/Theory.tsx","components/Test/Test.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Navbar/Navbar.module.css","components/Cards/card/Card.module.css","components/Test/Test.module.css"],"names":["module","exports","Resource","Navbar","className","s","nav","item","to","activeClassName","active","Header","props","header","Card","useState","currentQuestion","setCurrentQuestion","currentAnswer","setCurrentAnswer","showAnswer","setShowAnswer","filter","setFilter","taskQuestion","cardsQuestions","changeFilter","value","t","level","wrap","levelBlock","onClick","cardsBlock","questionCount","length","questionText","question","answer","buttonSection","navigationButton","nextQuestion","Cards","setCardsQuestions","console","log","useEffect","fetch","then","res","json","data","Practice","description","practiceBlock","practiceItem","imgItem","src","pract","Theory","Test","testQuestions","answerOptions","isCorrect","score","setScore","showScore","setShowScore","testBlock","refresh","questionSection","answerSection","map","handleAnswerOptionClick","App","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.21eac83c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Practice_wrap__1UBgv\",\"practiceBlock\":\"Practice_practiceBlock__3OtYR\",\"practiceItem\":\"Practice_practiceItem__atFmY\",\"imgItem\":\"Practice_imgItem__2YRGT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__zEo4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Cards_wrap__31MWK\",\"description\":\"Cards_description__3jlTb\"};","import React from 'react';\r\n\r\n\r\nconst Resource = () => {\r\n    return ( <div>\r\n            Здесь будет Resource\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Resource;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/theory\" activeClassName={s.active}>Теория</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/practice\" activeClassName={s.active}>Практика</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/cards\" activeClassName={s.active}>Самоподготовка</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/test\" activeClassName={s.active}>Пройти тест</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/resource\" activeClassName={s.active}>Ресурсы</NavLink>\r\n            </div>\r\n\r\n\r\n\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\ntype HeaderPropsType = {\r\n\r\n\r\n}\r\n\r\nconst Header = (props:HeaderPropsType) => {\r\n    return (<header className={s.header}>\r\n            <div>Training</div>\r\n\r\n        </header>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {useState} from 'react';\r\nimport s from './Card.module.css'\r\n\r\ntype QuestionsType = {\r\n    id:number;\r\n    question: string,\r\n    answer: string,\r\n    level: string,\r\n\r\n}\r\n\r\ntype CardType = {\r\n    cardsQuestions: QuestionsType[]\r\n}\r\n\r\n\r\n\r\ntype FilterValueType = \"easy\" | \"hard\" | \"all\"\r\n\r\n\r\n\r\n\r\nconst Card = (props:CardType ) => {\r\n\r\n\r\n    const [currentQuestion, setCurrentQuestion] = useState(0)\r\n    const [currentAnswer, setCurrentAnswer] = useState(0)\r\n    const [showAnswer, setShowAnswer] = useState(false)\r\n    const [filter, setFilter] = useState<FilterValueType>(\"all\")\r\n\r\n\r\n    const nextQuestionClick =() => {\r\n\r\n        const nextQuestion = currentQuestion +1\r\n        if (nextQuestion < props.cardsQuestions.length){\r\n            setCurrentQuestion(nextQuestion)\r\n            setShowAnswer(false)\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    const backQuestionClick =() => {\r\n        if (currentQuestion !==0) {\r\n            setCurrentQuestion(currentQuestion-1)\r\n            setShowAnswer(false)\r\n        }\r\n    }\r\n\r\n    const showAnswerClick =() => {\r\n        setShowAnswer(true)\r\n        setCurrentAnswer(currentAnswer+1)\r\n    }\r\n    let taskQuestion = props.cardsQuestions\r\n    if (filter === \"easy\") {\r\n        taskQuestion = props.cardsQuestions.filter(t => t.level ===\"easy\")}\r\n    if (filter === \"hard\") {\r\n        taskQuestion = props.cardsQuestions.filter(t => t.level ===\"hard\")}\r\n\r\n    function changeFilter(value:FilterValueType){\r\n        setFilter(value)\r\n        setCurrentQuestion(0)\r\n        setShowAnswer(false)\r\n    }\r\n\r\n\r\n\r\n    return (<div className={s.wrap}>\r\n\r\n            <div className={s.levelBlock}>\r\n                <button onClick={() => {changeFilter(\"easy\")}}>Easy</button>\r\n                <button onClick={() => {changeFilter(\"hard\")}}>Hard</button>\r\n                <button onClick={() => {changeFilter(\"all\")}}>All</button>\r\n            </div>\r\n            <div className={s.cardsBlock}>\r\n\r\n                <div className={s.questionCount}>\r\n                    <span>Вопрос {currentQuestion+1} / {taskQuestion.length}</span>\r\n\r\n                </div>\r\n                <div className={s.questionText}>{taskQuestion[currentQuestion].question}</div>\r\n\r\n                {showAnswer?\r\n                    <div className={s.showAnswer}>{taskQuestion[currentQuestion].answer}</div>: ''}\r\n                <div className={s.buttonSection}>\r\n                    <button onClick={showAnswerClick}>Показать ответ</button>\r\n                    <div className={s.navigationButton}>\r\n\r\n                        <button onClick={backQuestionClick}>Назад</button>\r\n                        <button onClick={nextQuestionClick}>Далее</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Card;","import React, {useEffect, useState} from 'react';\r\nimport s from './Cards.module.css'\r\nimport Card from \"./card/Card\";\r\n\r\n\r\n/*const cardsQuestions  = [\r\n    { id:1,\r\n        question: \"Что такое TDD?\",\r\n    answer:\"test-driven development - техника разработки ПО, при котором сначала пишем тесты, а потом их удовлетворяем. Затем можем спокойно рефакторить и изменять код как угодно, т.к. у нас есть тесты, которые точно скажут, что мы где-то ошиблись \",\r\n        level: \"easy\",\r\n    }\r\n    ,\r\n    { id:2,\r\n        question: \"Что такое Redux? Для чего он нужен?\",\r\n        answer:\"Redux – это библиотека для работы с состоянием приложения. (некоторое хранилище данных)\",\r\n        level: \"easy\"},\r\n    { id:3,\r\n        question: \"Что такое чистая ф-ия?\",\r\n        answer:\"Чистая ф-ия, это ф-ия, которая должна быть имьютабельная и идемпотентная\",\r\n        level: \"easy\"},\r\n    { id:4,\r\n        question: \"Что такое Reducer?\",\r\n        answer:\"Reducer - это функция, которая получает на входе стейт, и экшн (объект), который имеет как минимум свойство type,(инструкция), как нужно преобразовать стейт , возвращает измененный стейт\",\r\n        level: \"easy\"},\r\n    { id:5,\r\n        question: \"Что такое компонент?\",\r\n        answer:\"Компонент(-а) - функция, возвращающая JSX-разметку. Название функции должно быть с Большой буквы.Функция может принимать props (пропсы) - объект, который компонента может использовать внутри себя для отрисовки конкретных переданных в неё данных\",\r\n        level: \"easy\"},\r\n    { id:6,\r\n        question: \"Что возвращается из useState?\",\r\n        answer:\"Вызов useState вернёт пару значений: текущее состояние и функцию, обновляющую состояние.\"\r\n    ,level: \"easy\"},\r\n    { id:7,\r\n        question: \"Что такое WebWorker?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:8,\r\n        question: \"Что такое IndexedDB?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:9,\r\n        question: \"Отличие == от ===?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:10,\r\n        question: \"Расшифруй все буквы аббревиатуры SOLID?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:11,\r\n        question: \"Что такое SEO и почему SPA для SEO не очень?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:12,\r\n        question: \"Что такое cleanup для useEffect?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:13,\r\n        question: \"Что такое SPA и в чём суть?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:14,\r\n        question: \"Что такое HOC?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:15,\r\n        question: \"Что такое NodeJS?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:16,\r\n        question: \"Расшифруй аббревиатуру CRUD\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:17,\r\n        question: \"Назовите любое отличие HTTP1 от HTTP2\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:18,\r\n        question: \"Чем отличается localStorage от sessionStorage?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:19,\r\n        question: \"Чем оличается Agile от Waterfall?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:20,\r\n        question: \"Приведите минимум 2 примера Generic в TypeScript в React?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:21,\r\n        question: \"Что возвращает функция combineReducers? \",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:22,\r\n        question: \"Перечислить методы жизненного цикла классового компонента в правильном порядке\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:23,\r\n        question: \"Назовите любые 3 метода функции?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:23,\r\n        question: \"Кто такой Babel и что он делает?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:24,\r\n        question: \"Расшифруйте аббревиатуру БЭМ?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:25,\r\n        question: \"Что такое document.querySelector?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:26,\r\n        question: \"Во что Babel превращает JSX?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:27,\r\n        question: \"Отличие микротаски от макротаски?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n\r\n]*/\r\n/*const cardsQuestionsHtml  = [\r\n    { id:1,\r\n        question: \"Что такое doctype? И для чего он используется?\",\r\n        answer:\" Doctype используется для указания типа документа. (!DOCTYPE html). Служит для того, чтобы браузер понимал, как ему интерпретировать страницу, в соответствии с каким стандартом. Исходя из этого \" +\r\n            \"браузер будет знать, какие теги считать валидными, а какие устаревшими\",\r\n        level: \"easy\"}\r\n    ,\r\n    { id:2,\r\n        question: \"Опишите базовую структуру HTML-страницы?\",\r\n        answer: \"DOCTYPE -> HTML -> HEAD -> Title,Meta -> /HEAD -> BODY -> /BODY -> /HTML\",\r\n        level: \"easy\"},\r\n    { id:3,\r\n        question: \"Что такое семантика? Какие семантичные тэги вы знаете?\",\r\n        answer:\"\",\r\n        level: \"easy\"},\r\n    { id:4,\r\n        question: \"Какая разница между тэгами strong, em и b, i?\",\r\n        answer:\"\",\r\n        level: \"easy\"},\r\n    { id:5,\r\n        question: \"Что такое валидация? И какие типы проверок HTML документа вы знаете?\",\r\n        answer:\"\",\r\n        level: \"hard\"},\r\n    { id:6,\r\n        question: \"Какой тэг использовать для того, что бы сверстать кнопку?\",\r\n        answer:\"\"\r\n        ,level: \"easy\"},\r\n    { id:7,\r\n        question: \"Что такое инлайновый стиль? Можно ли его переопределить?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:8,\r\n        question: \"Есть ли у HTML элементов свои дефолтные специфичные стили?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:9,\r\n        question: \"Для какого тэга используется атрибут alt и зачем он нужен?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:10,\r\n        question: \"Типы списков в HTML?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:11,\r\n        question: \"Как семантически правильно сверстать картинку с подписью?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:12,\r\n        question: \"Что такое HTML и для чего он используется?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:13,\r\n        question: \"Типы input элементов в HTML?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:14,\r\n        question: \"Что такое элемент canvas? И для чего он используется?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:15,\r\n        question: \"Для чего используют data-атрибуты?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:16,\r\n        question: \"Разница между script, script async и script defer?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:17,\r\n        question: \"Для чего используется элемент datalist?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:18,\r\n        question: \"Что такое CSS? И для чего он используется?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:19,\r\n        question: \"Варианты добавление CSS стилей на страницу?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:20,\r\n        question: \"Типы позиционирования в CSS?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:21,\r\n        question: \"Блочная модель CSS? \",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:22,\r\n        question: \"Что такое специфичность селектора? Как считать вес селектора?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:23,\r\n        question: \"Разница между Reset.css и Normalize.css?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:23,\r\n        question: \"Разница между margin и padding?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:24,\r\n        question: \"Разница между display: none и visibility: hidden?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:25,\r\n        question: \"Разница между блочным и строчным (инлайновым) элементами?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:26,\r\n        question: \"Разница между адаптивным (adaptive) и отзывчивым (responsive) дизайнами?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:27,\r\n        question: \"Что такое CSS-правило?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:28,\r\n        question: \"Разница между классом и идентификатором в CSS?\",\r\n        answer:\".\"\r\n        ,level: \"easy\"},\r\n    { id:29,\r\n        question: \"Что такое CSS спрайт? И для чего он используется?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:30,\r\n        question: \"Что такое вендорные префиксы? И для чего они используются?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:31,\r\n        question: \"Разница между Progressive Enhancement и Graceful Degradation?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:32,\r\n        question: \"Что такое псевдоэлементы? И для чего они используются?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:33,\r\n        question: \"Что такое схлопывание границ (margin collapsing)?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:34,\r\n        question: \"Что такое кроссбраузерность?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n    { id:35,\r\n        question: \"Что такое CSS препроцессор?\",\r\n        answer:\".\"\r\n        ,level: \"hard\"},\r\n\r\n]*/\r\n\r\nconst Cards = () => {\r\n\r\n    const [cardsQuestions, setCardsQuestions] = useState([])\r\n    const [cardsQuestionsHtml, setCardsQuestionsHtml] = useState([])\r\n    console.log(cardsQuestions)\r\n    useEffect( () => {\r\n\r\n    fetch('http://localhost:3004/react')\r\n    .then(res => {\r\n        return res.json()\r\n    })\r\n    .then( data => {\r\n        setCardsQuestions(data)\r\n        console.log(data)\r\n    })\r\n    }, [])\r\n\r\n    return (<div className={s.wrap}>\r\n        <h3>Вопросы для самопроверки React</h3>\r\n         {cardsQuestions.length ===0 ? '' : <Card cardsQuestions={cardsQuestions}/> }\r\n\r\n\r\n            {/*    <div className={s.nameCard}>\r\n                <h3>Вопросы на собеседовании CSS + HTML</h3>\r\n\r\n          <Card cardsQuestions={cardsQuestionsHtml}/>\r\n            </div>\r\n            <div className={s.nameCard}>\r\n                <h3>Вопросы на собеседовании JS</h3>\r\n                <Card cardsQuestions={cardsQuestions}/>\r\n            </div>\r\n            <div className={s.nameCard}>\r\n                <h3>Задачи на собеседовании JS</h3>\r\n                <Card cardsQuestions={cardsQuestions}/>\r\n            </div>*/}\r\n</div>\r\n\r\n    )\r\n}\r\n\r\nexport default Cards;","export default __webpack_public_path__ + \"static/media/practice1.8e573f4a.jpg\";","import React from 'react';\r\nimport s from './Practice.module.css'\r\nimport pract from '../../assets/img/practice1.jpg'\r\n\r\n\r\nconst Practice = () => {\r\n    return ( <div className={s.wrap}>\r\n            <div className={s.description}>Здесь будут примеры для применения знаний на практике</div>\r\n            <div className={s.practiceBlock}>\r\n                <button>JS</button>\r\n                <button>React,Redux</button>\r\n                <button>HTML+CSS</button>\r\n                <button>with API</button>\r\n\r\n                <div className={s.practiceItem}>\r\n                    <div className={s.imgItem}><img src={pract} /></div>\r\n                    <div>Счетчик</div>\r\n                    <div>Описание</div>\r\n                    <div>Стек</div>\r\n                </div>\r\n            </div>\r\n\r\n            1. Разделяем на технологии\r\n            2. JS - countdown\r\n            3. JS - Countdown Timer\r\n            0:32:15 - Quiz App\r\n            1:23:20 - Recipe App\r\n            3:19:57 - Notes App\r\n            4:10:35 - ToDo App\r\n            4:46:14 - Movies App\r\n            5:39:55 - GitHub Profiles\r\n            6:33:30 - Drawing App\r\n            7:19:40 - Password Generator\r\n            8:10:05 - Weather App\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Practice;","import React from 'react';\r\n\r\n\r\nconst Theory = () => {\r\n    return ( <div>\r\n            Здесь будет Resource\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Theory;","import React, {useState} from 'react';\r\nimport s from './Test.module.css'\r\ntype AnswerOptionsType = {\r\n    answer:string,\r\n    isCorrect: boolean\r\n}\r\ntype TestQuestionsType ={\r\n    question: string,\r\n    answerOptions: AnswerOptionsType[]\r\n}\r\n\r\nconst Test = () => {\r\n    const testQuestions:TestQuestionsType[]  = [\r\n        {question: \"Что такое TDD?\",\r\n            answerOptions: [\r\n                {answer: 'fff', isCorrect: false},\r\n                {answer: 'aaa', isCorrect: true},\r\n                {answer: 'fbb', isCorrect: false},\r\n                {answer: 'ccc', isCorrect: false},\r\n            ]\r\n           },\r\n        {question: \"Что такое djfnkjcnds?\",\r\n            answerOptions: [\r\n                {answer: '111', isCorrect: false},\r\n                {answer: '555', isCorrect: true},\r\n                {answer: '44', isCorrect: false},\r\n                {answer: 'ccc', isCorrect: false},\r\n            ]\r\n        },\r\n        {question: \"Что такое 1212312?\",\r\n            answerOptions: [\r\n                {answer: 'fff', isCorrect: false},\r\n                {answer: 'aaa', isCorrect: true},\r\n                {answer: 'fbb', isCorrect: false},\r\n                {answer: 'ccc', isCorrect: false},\r\n            ]\r\n        }\r\n    ]\r\n\r\n\r\n    const [currentQuestion, setCurrentQuestion] = useState(0)\r\n    const [score, setScore] = useState(0)\r\n    const [showScore, setShowScore] = useState(false)\r\n\r\n\r\n    const handleAnswerOptionClick=(isCorrect: boolean) => {\r\n    if(isCorrect){\r\n        setScore(score + 1)\r\n    }\r\n\r\n    const nextQuestion = currentQuestion + 1\r\n        if (nextQuestion < testQuestions.length){\r\n            setCurrentQuestion(nextQuestion)\r\n        } else {\r\n            setShowScore(true)\r\n        }\r\n    }\r\n\r\n    const refresh =() =>{\r\n        setCurrentQuestion(0)\r\n        setScore(0)\r\n        setShowScore(false)\r\n    }\r\n\r\n    return (<div className={s.wrap}>\r\n\r\n            <div className={s.testBlock}>\r\n\r\n                {\r\n                    showScore ?\r\n                        <div className={s.showScore}>\r\n                            <div>Правильных ответов {score} из {testQuestions.length}</div>\r\n                        <button onClick={refresh} className={s.refresh}>Пройти еще раз</button>\r\n                        </div>\r\n                        :\r\n                        <div className={s.questionSection}>\r\n                            <div className={s.questionCount}>\r\n                                <span>Вопрос {currentQuestion+1}</span> / {testQuestions.length}\r\n                            </div>\r\n                            <div className={s.questionText}>{testQuestions[currentQuestion].question}</div>\r\n                            <div className={s.answerSection}>\r\n                                {testQuestions[currentQuestion].answerOptions.map(item => (\r\n                                    <button onClick={()=>handleAnswerOptionClick(item.isCorrect)}>{item.answer}</button>\r\n                                ))}\r\n\r\n                            </div>\r\n                        </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test;","import React from 'react';\nimport './App.css';\nimport {Route} from 'react-router-dom'\nimport Resource from \"./components/Resources/Resourse\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Header from \"./components/Header/Header\";\nimport Cards from \"./components/Cards/Cards\";\nimport Practice from \"./components/Practice/Practice\";\nimport Theory from \"./components/Theory/Theory\";\nimport Test from \"./components/Test/Test\";\n\ntype AppPropsType = {}\n\nconst App = (props: AppPropsType) => {\n\n    return (\n        <div className=\"app-wrapper\">\n            <Header />\n            <Navbar/>\n            <div className=\"app-wrapper-content\">\n                <Route path=\"/\"\n                       render={() => <Theory />}/>\n                <Route path=\"/theory\"\n                       render={() => <Theory />}/>\n                <Route path=\"/practice\"\n                       render={() => <Practice />}/>\n                <Route path=\"/cardsQuestion\"\n                       render={() => <Cards />}/>\n                <Route path=\"/resource\"\n                       render={() => <Resource/>}/>\n                <Route path=\"/test\"\n                       render={() => <Test />}/>\n\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n            <App />\n    </BrowserRouter>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2rEHX\",\"item\":\"Navbar_item__EszB0\",\"active\":\"Navbar_active__1rnww\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsBlock\":\"Card_cardsBlock__3ifjB\",\"questionText\":\"Card_questionText__20nJz\",\"questionCount\":\"Card_questionCount__2AEhJ\",\"buttonSection\":\"Card_buttonSection__2tPfC\",\"navigationButton\":\"Card_navigationButton__23lm6\",\"showAnswer\":\"Card_showAnswer__A4bJA\",\"levelBlock\":\"Card_levelBlock__1bEcK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Test_wrap__2BpYf\",\"testBlock\":\"Test_testBlock__3QFFx\",\"questionCount\":\"Test_questionCount__2doqc\",\"questionText\":\"Test_questionText__G8B6b\",\"answerSection\":\"Test_answerSection__2WqV0\",\"showScore\":\"Test_showScore__2o57N\",\"refresh\":\"Test_refresh__1s7ah\"};"],"sourceRoot":""}